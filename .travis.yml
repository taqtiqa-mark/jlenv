--- 
after_success: 
  - "bash <(curl -s https://codecov.io/bash)"
before_install: "gem update --system --no-doc"
before_script: 
  - "whereis bash"
  - "bash --version"
  - ./test/install_bash.bash
  - "bash --version"
  - "git clone https://github.com/infertux/bashcov.git"
  - "cd bashcov/"
  - "gem build bashcov.gemspec"
  - "gem install bashcov-2.0.0.gem"
  - "export PATH=$PATH:$PWD"
  - "cd .."
  - "gem install codecov"
  - "gem install coveralls"
  - "gem install codeclimate-test-reporter"
cache: 
  directories: 
    - bash
env: 
  matrix: 
    - INSTALL_BASH_VERSION=5.0
    - INSTALL_BASH_VERSION=4.4
    - INSTALL_BASH_VERSION=4.3
    - INSTALL_BASH_VERSION=4.2
    - INSTALL_BASH_VERSION=4.1
    - INSTALL_BASH_VERSION=4.0
language: ruby
matrix: 
  allow_failures: 
    - 
      env: INSTALL_BASH_VERSION=4.1
    - 
      env: INSTALL_BASH_VERSION=4.0
  include: 
    - 
      rvm: "2.5.5"
os: 
  - linux
rvm: 
  - "2.5.5"
script:
- |
  (bashcov test/run || true)
  cat bats.log | sed -e '/^not ok/!d' | cut -f4- -d ' ' >bats.not
  echo 'export JLENV_DEBUG=1' >bats_not.cmds
  ls -la
  cat bats.not | while read -r line; do echo "test/libs/bats/bin/bats -f '${line}' test" >>bats_not.cmds; done
  cat bats_not.cmds
  (bash bats_not.cmds || true)
sudo: required
