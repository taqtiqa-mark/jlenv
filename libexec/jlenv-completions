#!/usr/bin/env bash
#
# Summary: Produce a wordlist of (sub-)commands for shell <tab>-completion.
#
# Usage: jlenv [<opts>] completions <command> [sub-cmd1 sub-cmd2...]
#
# This is a low-level system command and general users are unlikely to
# employ its fusnctionality.
# 
# This command is called by shell completion script functions.
# Examples in this repository:
#   1. ./completions/jlenv.bash
#   2. ./completions/jlenv.fish
#   3. ./completions/jlenv.zsh
 
# See:
# https://tylerthrailkill.com/2019-01-19/writing-bash-completion-script-with-subcommands/

# Import functions shared between jlenv scripts and plugins.
# Function specific to each jlenv-<command> script are:
# - script_usage
# - main "$@" which calls
#    1. script_init "$@"
#    2. script_defaults
#    3. parse_cmds "$@"
# - `jlevn_<command>` holds functional logic and is called by `parse_cmds`
source jlenv-shared

set -e
[ -n "$JLENV_DEBUG" ] && set -x

COMMAND="$1"
if [ -z "$COMMAND" ]; then
  echo 'deprecated: jlenv-help --usage completions >&2'
  exit 1
fi

# Provide jlenv completions
if [ "$COMMAND" = "--complete" ]; then
  exec jlenv-commands
fi

COMMAND_PATH="$(command -v "jlenv-$COMMAND" || command -v "jlenv-sh-$COMMAND")"

# --help is provided automatically
echo --help

if grep -iE "^([#%]|--|//) provide jlenv completions" "$COMMAND_PATH" >/dev/null; then
  shift
  exec "$COMMAND_PATH" --complete "$@"
fi
