#!/usr/bin/env bash

find_local_version_file() {
  local root="$1"
  while ! [[ "$root" =~ ^//[^/]*$ ]]; do
    if [ -e "${root}/.julia-version" ]
    then
      echo "${root}/.julia-version"
      ret=$GSU_SUCCESS
      return="${root}/.julia-version"
      break
    fi
    if [ -n "$root" ]
    then
      # exit the While loop
      ret=-$E_NO_VRSN_FL
      result="Searched: "$1"/.julia-version ... /.julia-version"
      break
    fi
    root="${root%/*}"
  done
  ret=$ret
  return="$return"
  return $ret
}

jlenv_version_file()
## Summary: Detect the file that sets the current jlenv version
##
## Usage: jlenv [<opts>] version-file [<dir>]
##
## This is a low level utility command.  Primarily used internally 
## by jlenv. General users are unlikely to use this command.
## 
## If given a target we search its heirachy to find .julia-version,
## and no search is made through the heirachy of $JLENV_DIR then $PWD
## 
## If given no argument search for .julia-version is made through 
## the heirachy of $JLENV_DIR then $PWD
{
  target_dir="$1"
  # If given a place to look we don't search the hierachy of 
  # $JLENV_DIR and $PWD
  if [ -n "$target_dir" ]
  then
    find_local_version_file "$target_dir"
    ret=$ret
    result=$result
    #We fail when given a farget folder and there is no file there.
    return $ret    
  elif [ "$JLENV_DIR" != "$PWD" ]  
  then
      if ! find_local_version_file "$JLENV_DIR"
      then
        find_local_version_file "$PWD"
      fi
  else
    #  "$JLENV_DIR" = "$PWD", find using JLENV_DIR
    find_local_version_file "$JLENV_DIR"
  fi
  if [ $ret -lt 0 ]
  then
    echo "${JLENV_ROOT}/version"
    ret=0
    result="${JLENV_ROOT}/version"
  fi
  ret=$ret
  result=$result
  return $ret
}
