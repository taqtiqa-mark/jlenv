#!/usr/bin/env bash

version_exists() {
  local version="$1"
  [ -d "${JLENV_ROOT}/versions/${version}" ]
}


jlenv_version_name()
##
## Summary: Show the current Julia version
##
## Usage: jlenv [<opts>] version-name
##
## This is convenience script that shows only the version of the current Julia.
## This script is also extensively employed in jlenv internally.
{
  if [ -z "$JLENV_VERSION" ]; then
    JLENV_VERSION_FILE="$(jlenv-version-file)"
    JLENV_VERSION="$(jlenv-version-file-read "$JLENV_VERSION_FILE" || true)"
  fi

  OLDIFS="$IFS"
  IFS=$'\n' scripts=($(jlenv-hooks version-name))
  IFS="$OLDIFS"
  for script in "${scripts[@]}"; do
    source "$script"
  done

  if [ -z "${JLENV_VERSION}" ] || [ "${JLENV_VERSION}" = "system" ]; then
    echo "system"
    exit
  fi

  if version_exists "$JLENV_VERSION"; then
    echo "$JLENV_VERSION"
  elif version_exists "${JLENV_VERSION#julia-}"; then
    echo "${JLENV_VERSION#julia-}"
  else
    echo "jlenv: version 'v${JLENV_VERSION}' is not installed (set by $(jlenv-version-origin))" >&2
    exit 1
  fi
}