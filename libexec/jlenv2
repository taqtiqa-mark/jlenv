#!/usr/bin/env bash

#######################################################################
# gsu-based jlenv - a PoC way to write a hello world program
# -----------------------------------------------------------------
# It not only requires one to download and install some totally weird
# git repo, it also takes about 50 lines of specially written code
# to perform what a simple echo 'hello world' would do equally well.
#######################################################################

src_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source ${src_dir}/jlenv-shared

gsu_dir="$(resolve_path "${gsu_dir:-${BASH_SOURCE[0]%/*}}")"

gsu_errors='
    E_NO             No Julia install found.
    E_NO_VRSN        No Julia install found of that version.
    E_NO_SYS         No Julia install system wide found.
    E_NO_SYS_VRSN    No Julia install system wide found of that version.
    E_NO_USR         No Julia install user wide found.
    E_NO_USR_VRSN    No Julia install user wide found of that version.
    E_NO_PRJ         No Julia install project wide found.
    E_NO_PRJ_VRSN    No Julia install project wide found of that version.
'

# man page banner text
gsu_banner_txt='Robust Julia version management.'

source "${gsu_dir}/jlenv-hooks" 
source "${gsu_dir}/jlenv-version"
source "${gsu_dir}/jlenv-version-name"
source "${gsu_dir}/jlenv-version-origin"

com_hooks()
{
    jlenv_hooks "$@"
    ret=$GSU_SUCCESS
}
com_version()
{
    jlenv_version "$@"
    ret=$GSU_SUCCESS
}
com_version-name()
{
    jlenv_version_name "$@"
    ret=$GSU_SUCCESS
}
com_version-origin()
{
    jlenv_version_origin "$@"
    ret=$GSU_SUCCESS
}

#####################################################################
#
#  Start-up
#
#####################################################################
source "${gsu_dir}/subcommand" || exit 1

gsu "$@"

# See:
# http://people.tuebingen.mpg.de/maan/gsu/
